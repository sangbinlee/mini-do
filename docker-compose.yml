version: "3.8"


# docker run --name nginx -d -p 80:80 --restart always nginx:1.22.1-alpine
# docker run --name mini-do -d -p 3000:3000 mini-do:latest


# services:
#   mini-do:
#     # container_name: mini-do
#     # image: mini-do:latest
#     # user: root
#     restart: always
#     # build: .
#     ports:
#       - 3000:3000


# services:
#   mini-do: # 서비스 이름
#     container_name: mini-do
#     build:
#       # context: ./mini-do
#       context: .
#       dockerfile: Dockerfile
#       #dockerfile: prod.Dockerfile
#     volumes:
#       - .:/app
#       - /app/node_modules
#     # restart: unless-stopped
#     # depends_on:
#     #   - db
#     restart: always
#     # environment:
#     #   - NODE_ENV=production
#     ports:
#       - 3000:3000
 



services:  # Add more containers below (nginx, postgres, etc.)
  db:
    image: 'postgres:latest'
    restart: always
    environment:
      - 'POSTGRES_DB=mydatabase'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=myuser'
    ports:
      - '5432:5432'
    volumes:
      - ./data/postgres/:/var/lib/postgresql/data
    networks:
      - bridge


networks:
  bridge: 


# docker run --name localhost -d -e POSTGRES_DB=mydatabase -e POSTGRES_PASSWORD=secret -e POSTGRES_USER=myuser -p "5432:5432" -v ./data/postgres:/var/run/postgresql postgres
# docker run -d -e POSTGRES_DB=mydatabase -e POSTGRES_PASSWORD=secret -e POSTGRES_USER=myuser -p "5432:5432" -v ./data/postgres:/var/run/postgresql/data postgres

# networks:
#   default:
#     external:
#       name: bridge


# | Can't reach database server at `localhost`:`5432`
# mini-do       |
# mini-do       | Please make sure your database server is running at `localhost`:`5432`. {



# volumes:
#   db:



# docker compose up -d -f docker-compose.prod.yml --build
# docker run --name mini-do -d -p 3000:3000 mini-do:latest

# docker network ls
